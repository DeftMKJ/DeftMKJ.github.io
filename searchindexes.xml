<?xml version="1.0" encoding="utf-8" standalone="yes"?><search><entry><title>算法100天</title><url>/post/%E7%AE%97%E6%B3%95100%E5%A4%A9/</url><categories><category>算法</category></categories><tags><tag>Python</tag><tag>算法学习</tag></tags><content type="html">算法100天
题目 from typing import List # 输入：nums = [2,7,11,15], target = 9 # 输出：[0,1] # 解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。 # https://leetcode.cn/problems/two-sum class Solution001: def twoSum(self, nums: List[int], target: int) -&amp;gt; List[int]: # 创建Map hashtable = {} # enumerate遍历 元祖前者是index 后者是value for i, num in enumerate(nums): # 目标值减去当前值，判断字典的keys字典是否有值，有就拿到key对应的value if target - num in hashtable.keys(): return [hashtable[target - num], i] # key 是 数组value， value是数组index hashtable[num] = i return []</content></entry><entry><title>IOS内存管理初始篇</title><url>/post/ios%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%88%9D%E5%A7%8B%E7%AF%87/</url><categories><category>iOS</category></categories><tags><tag>iOS</tag><tag>内管管理</tag><tag>Autorelease Pool</tag></tags><content type="html"><![CDATA[iOS内存管理初始篇
1. Why Reduce Memory 更好的用户体验 启动更快 系统表现更好 App存留时间更长 2. Memory Footprint Not all memory is created equal
https://juejin.cn/post/6844903621276991502#heading-3 3. 命令 3.1 vmmap 查看详细报告
vmmap xxx.memgraph 查看摘要报告
vmmap --summary xxx.memgraph 配合grep命令查看所有动态库的Dirty Pages的综合
vmmap -pages xxx.memgraph | grep &#39;.dylib&#39; | awk &#39;{sum += $6} END { print &#34;Total Dirty Pages:&#34;sum}&#39; 只显示内存异常相关模块的数据CGImage
vmmap xx.memgraph | grep &#39;CG image&#39; 更多文档
man vvmap man leaks man heap 3.2 leaks 查看泄漏的内存
leaks xxx.memgraph 查看某处的内存泄漏
leaks --traceTree [address] xxx.memgraph 3.3 heap 查看所有堆区对象的内存使用
heap xxx.memgraph 默认情况下是按照对象数量进行排序的，通常情况他们不会造成什么内存问题。我们关心的是内存大小，因此按照-sortBySize的方式进行大小顺序来查看所有堆区对象的使用
heap xxx.memgraph -sortBySize 有了这些对象的内存地址后，我们还需要工具进行下一步分析。
3.4 malloc_history 开启：
在 Product -&gt; Scheme -&gt; Edit Scheme -&gt; Diagnostics 中，开启 Malloc Stack 功能，建议使用 Live Allocations Only 选项
查看内存分配历史
malloc_history xxx.memgraph [address] malloc_history xxx.memgraph --fullStacks [address] ]]></content></entry><entry><title>支持用户自定义设计</title><url>/post/custom-files.html</url><categories><category>示例</category></categories><tags><tag>自定义</tag><tag>个性化</tag><tag>布局</tag></tags><content type="html"><![CDATA[对于熟悉前端开发的用户来说，可以通过自定义文件配置，实现对站点的样式和布局进行个性化的调整。其中布局方面主要是支持左侧边栏的站点概览部分，以及站点底部2个位置，但样式的重置可以是整个站点的任意位置。
打开配置参数 首先要明确在配置文件的 params 区域中有配置如下参数：
customFilePath: sidebar: custom_sidebar.html footer: custom_footer.html style: /css/custom_style.css 注意： sidebar 和 footer 的文件命名不可以与它们的参数名称相同，不然会影响系统默认的布局设计，切记！！！ 😄 然后在站点的根目录下创建 layouts/partials 2个目录，用于存放自定布局设计文件，另外在站点根目录下创建 statics/css 2个目录，用于存放自定义 CSS 样式文件。一切就绪后，就可以参考如下的步骤，完成自己的设计想法。
侧边栏设计 在前面创建 partials 目录中新一个后缀名为 html 的文件，可以在里面书写你所想表达的设计或内容，比如引入一些第三方组件内容。示例如下：
&lt;div class=&#34;mydefined animated&#34; itemprop=&#34;custom&#34;&gt; &lt;span&gt;支持自定义CSS和Sidebar布局啦💄💄💄&lt;/span&gt; &lt;/div&gt; 再把该文件的路径配置到相应的参数中，效果请查看左侧边栏底部的效果。
底部设计 在前面创建 partials 目录中新一个后缀名为 html 的文件，可以在里面书写你所想表达的设计或内容，比如引入一些第三方组件内容。示例如下：
&lt;div class=&#34;custom-footer&#34;&gt; Website source code &lt;a href=&#34;https://github.com/hugo-next/hugo-theme-next/tree/develop/exampleSite/layouts/partials/custom-footer.html&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; &lt;/div&gt; 再把该文件的路径配置到相应的参数中，效果请查看站点底部的效果。
自定义样式 在前面创建 css 目录中新一个后缀名为 css 的文件，然后可以在里面把站点的样式进行重定义，或是增加一些自己定义的样式设计，在写文章时进行引用，示例如下：
.custom-head5 { font-size: 1.2em; color: #ed6c24; font-weight: bold; } 再把该文件的路径配置到相应的参数中，效果参考如下：
我是自定义的标题样式效果!!!
]]></content></entry><entry><title>关于 Hugo NexT 组织</title><url>/about.html</url><categories/><tags/><content type="html">Hugo NexT 组织是由众多喜爱 NexT 主题及风格的世界各地友人共同组建而成，为的就是让这个主题继续在 Hugo 引擎中也能得到发扬光大，在此也欢迎你的加入！
我们的愿景 延续 NexT 经典的黑白调搭配，保持简单的易用性及强大的功能。
使用反馈 加入 GitHub Discussions 或 Gitter 在线讨论 🍻 GitHub Issues 提交错误报告 🐛 GitHub Feature 表新功能的想法 ✨ 同时国内用户也可加入 QQ 群交流： 604710815</content></entry><entry><title>站点示例</title><url>/flinks.html</url><categories/><tags/><content type="html">如想交换本站友情链接，请在评论区留下你的站点信息，格式参考如下：
- name: Hugo-NexT desc: Hugo NexT 官方预览网站。 avatar: https://hugo-next.eu.org/imgs/hugo_next_avatar.png link: https://hugo-next.eu.org</content></entry></search>